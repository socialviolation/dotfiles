#!/bin/bash

set -e

echo "==> Starting YADM Bootstrap"

# Detect package manager
if command -v yay &> /dev/null; then
    PKG_MANAGER="yay"
    INSTALL_CMD="yay -S --noconfirm"
elif command -v pacman &> /dev/null; then
    PKG_MANAGER="pacman"
    INSTALL_CMD="sudo pacman -S --noconfirm"
elif command -v apt-get &> /dev/null; then
    PKG_MANAGER="apt"
    INSTALL_CMD="sudo apt-get install -y"
elif command -v dnf &> /dev/null; then
    PKG_MANAGER="dnf"
    INSTALL_CMD="sudo dnf install -y"
else
    echo "Unsupported package manager. Exiting."
    exit 1
fi

echo "==> Detected package manager: $PKG_MANAGER"

# Install essential tools (cross-platform)
echo "==> Installing essential tools"
if [ "$PKG_MANAGER" = "yay" ] || [ "$PKG_MANAGER" = "pacman" ]; then
    $INSTALL_CMD fzf zoxide python python-pip direnv mise
elif [ "$PKG_MANAGER" = "apt" ]; then
    $INSTALL_CMD fzf python3 python3-pip direnv
    # zoxide and mise not in apt repos, install later
elif [ "$PKG_MANAGER" = "dnf" ]; then
    $INSTALL_CMD fzf zoxide python3 python3-pip direnv
fi

# Install mise if not already installed (for non-arch systems)
if ! command -v mise &> /dev/null; then
    echo "==> Installing mise"
    curl https://mise.run | sh
else
    echo "==> mise already installed"
fi

# Install zoxide if not already installed (for non-arch systems)
if ! command -v zoxide &> /dev/null; then
    echo "==> Installing zoxide"
    curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash
else
    echo "==> zoxide already installed"
fi

# Install uv (cross-platform)
if ! command -v uv &> /dev/null; then
    echo "==> Installing uv"
    curl -LsSf https://astral.sh/uv/install.sh | sh
else
    echo "==> uv already installed"
fi

# Install zsh if not installed
if ! command -v zsh &> /dev/null; then
    echo "==> Installing zsh"
    $INSTALL_CMD zsh
else
    echo "==> zsh already installed"
fi

# Set zsh as default shell if not already
if [ "$SHELL" != "$(which zsh)" ]; then
    echo "==> Setting zsh as default shell"
    chsh -s "$(which zsh)"
else
    echo "==> zsh already default shell"
fi

# Create .zsh directory structure
echo "==> Creating .zsh directory structure"
mkdir -p "$HOME/.zsh/plugins"

# Install Powerlevel10k
if [ ! -d "$HOME/.powerlevel10k" ]; then
    echo "==> Installing Powerlevel10k"
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git "$HOME/.powerlevel10k"
else
    echo "==> Powerlevel10k already installed, updating..."
    git -C "$HOME/.powerlevel10k" pull
fi

# Install zsh plugins
declare -A plugins=(
    ["fast-syntax-highlighting"]="https://github.com/zdharma-zmirror/fast-syntax-highlighting.git"
    ["zsh-autosuggestions"]="https://github.com/zsh-users/zsh-autosuggestions.git"
    ["zsh-completions"]="https://github.com/zsh-users/zsh-completions.git"
)

for plugin in "${!plugins[@]}"; do
    plugin_dir="$HOME/.zsh/plugins/$plugin"
    if [ ! -d "$plugin_dir" ]; then
        echo "==> Installing $plugin"
        git clone --depth=1 "${plugins[$plugin]}" "$plugin_dir"
    else
        echo "==> $plugin already installed, updating..."
        git -C "$plugin_dir" pull
    fi
done

# Clean up zcompdump
echo "==> Cleaning zsh completion cache"
rm -f "$HOME/.zcompdump"

echo "==> Bootstrap complete! Please restart your shell or run 'source ~/.zshrc'"
